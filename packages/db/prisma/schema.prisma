// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  password String

  players   Player[]
  rooms     Room[]   @relation("OwnedRooms")
  chats ChatMessage[]
}

model Room {
  id        String   @id @default(uuid())
  name      String
  isPrivate Boolean  @default(false)
  createdAt DateTime @default(now())
  ownerId   String

  owner     User     @relation("OwnedRooms", fields: [ownerId], references: [id])
  players   Player[]
  chats ChatMessage[]
}

model Player {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  x         Int      @default(0)
  y         Int      @default(0)
  joinedAt  DateTime @default(now())
  lastSeen  DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
}

model ChatMessage {
  id        String   @id @default(uuid())
  roomId    String
  userId    String
  message   String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
}
